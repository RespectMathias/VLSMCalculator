<?xml version="1.0" encoding="utf-8" ?>
<!-- Copyright 2023 Mathias Lund-Hansen
 
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
 
    http://www.apache.org/licenses/LICENSE-2.0
 
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License. -->

<!-- Page displaying subnet information -->
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:ViewModels="clr-namespace:VLSMistique.ViewModels"
             xmlns:Models="clr-namespace:VLSMistique.Models"
             x:Class="VLSMistique.Views.MainPage"
             x:DataType="ViewModels:MainPageViewModel">

    <ContentPage.Resources>
        <ResourceDictionary>
            <toolkit:IntToBoolConverter x:Key="IntToBoolConverter" />
            <Style x:Key="InvalidEntryStyle" TargetType="Entry">
                <Setter Property="TextColor" Value="#FF5555" />
            </Style>
        </ResourceDictionary>
    </ContentPage.Resources>

    <StackLayout VerticalOptions="FillAndExpand">
        <ScrollView VerticalOptions="FillAndExpand">
            <StackLayout>
                <!-- IPAddress Input -->
                <!-- Input for specifying the IPAdress. -->
                <Label Text="IP Address:" Margin="5,5,5,5" VerticalOptions="Center" />
                <Entry Margin="5,5,5,5"
               Text="{Binding Address, Mode=TwoWay}">
                    <Entry.Behaviors>
                        <toolkit:TextValidationBehavior
                            InvalidStyle="{StaticResource InvalidEntryStyle}"
                            Flags="ValidateOnValueChanged"
                            RegexPattern="^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$" />
                    </Entry.Behaviors>
                </Entry>

                <!-- CollectionView Header -->
                <Grid ColumnSpacing="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="1" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0" Margin="5,5,5,5" Text="Required Host" />
                    <Label Grid.Column="1" Margin="5,5,5,5" Text="Available Hosts" />
                    <Label Grid.Column="2" Margin="5,5,5,5" Text="Subnet Mask" />
                    <Label Grid.Column="3" Margin="5,5,5,5" Text="Network Address" />
                    <Label Grid.Column="4" Margin="5,5,5,5" Text="Range" />
                    <Label Grid.Column="5" Margin="5,5,5,5" Text="Broadcast Address" />
                    <BoxView Grid.Row="1" Grid.ColumnSpan="6" HeightRequest="1" BackgroundColor="Black" />
                </Grid>

                <!-- Subnets CollectionView -->
                <CollectionView Margin="5,5,5,5" x:Name="SubnetsCollectionView"
                            ItemsSource="{Binding Subnets}" >
                    <CollectionView.ItemTemplate CachingStrategy="RecycleElement">
                        <DataTemplate x:DataType="Models:SubnetModel">
                            <Grid ColumnSpacing="1" Margin="0,5,0,5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Entry Grid.Column="0"
                               Text="{Binding HostAmount, Mode=TwoWay}" >
                                    <Entry.Behaviors>
                                        <toolkit:NumericValidationBehavior 
                                        InvalidStyle="{StaticResource InvalidEntryStyle}"
                                        Flags="ValidateOnValueChanged"
                                        MinimumValue="1"
                                        MaximumValue="254" />
                                    </Entry.Behaviors>
                                </Entry>
                                <Entry Grid.Column="1" IsReadOnly="True"
                                       Text="{Binding MaxSubnetHosts}" />
                                <Entry Grid.Column="2" IsReadOnly="True"
                                       Text="{Binding Mask}" />
                                <Entry Grid.Column="3" IsReadOnly="True"
                                       Text="{Binding NetworkAddress}" />
                                <Entry Grid.Column="4" IsReadOnly="True"
                                       Text="{Binding Range}" />
                                <Entry Grid.Column="5" IsReadOnly="True"
                                       Text="{Binding BroadcastAddress}" />
                                <BoxView Grid.Row="1" Grid.ColumnSpan="6" HeightRequest="1" BackgroundColor="Black" />
                            </Grid>
                        </DataTemplate>
                    </CollectionView.ItemTemplate>
                </CollectionView>
                <!-- Should be below CollectionView but always on screen -->
                <!-- Meaning once it reaches the export buttons it should scroll to follow -->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="1" Text="-" Margin="5,5,5,5" HeightRequest="50" WidthRequest="50" CornerRadius="25"
                            Command="{Binding RemoveSubnetsCommand}" />

                    <Button Grid.Column="2" Text="+" Margin="5,5,5,5" HeightRequest="50" WidthRequest="50" CornerRadius="25"
                            Command="{Binding AddSubnetsCommand}" />
                </Grid>
            </StackLayout>
        </ScrollView>

        <!-- Buttons StackLayout at the bottom. -->
        <StackLayout VerticalOptions="End">
            <!-- Calculate Subnets Button. -->
            <!-- Button to trigger subnet calculation. -->
            <Button Text="Calculate" Margin="5,5,5,5"
                    Command="{Binding CalculateSubnetsCommand}" IsEnabled="{Binding ValidateInput}" />

            <!-- Export Button. -->
            <!-- Button to trigger export Subnets as Csv. -->
            <Button Text="Export..." Margin="5,5,5,5"
                    Command="{Binding ExportCommand}" />
        </StackLayout>
    </StackLayout>
</ContentPage>