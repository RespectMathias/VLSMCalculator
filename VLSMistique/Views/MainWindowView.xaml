<!--   Copyright 2023 Mathias Lund-Hansen
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License. -->

<mica:MicaWindow x:Class="VLSMistique.Views.MainWindowView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ViewModels="clr-namespace:VLSMistique.ViewModels"
        xmlns:Views="clr-namespace:VLSMistique.Views"
        xmlns:Controls="clr-namespace:VLSMistique.Controls"
        xmlns:Converters="clr-namespace:VLSMistique.Converters"
        WindowStartupLocation="CenterScreen"
        Title="VLSMistique" Height="500" Width="800"
        xmlns:ui="http://schemas.modernwpf.com/2019"
        xmlns:mica="clr-namespace:MicaWPF.Controls;assembly=MicaWPF">

    <Window.DataContext>
        <ViewModels:MainWindowViewModel />
    </Window.DataContext>

    <Window.Resources>
        <Converters:ZeroToNullConverter x:Key="ZeroToNullConverter" />
    </Window.Resources>

    <!-- Grid Definitions -->
    <ui:Page>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" MinWidth="95.99" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <!-- Amount of Subnets Input -->
            <TextBlock Grid.Column="0" Text="Subnet Amount:" Margin="5,0,5,0" VerticalAlignment="Center" Height="16" />
            <mica:TextBox Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Margin="5,5,5,5">
                <TextBox.Text>
                    <Binding Path="SubnetAmount"
                         Mode="TwoWay"
                         UpdateSourceTrigger="PropertyChanged"
                         NotifyOnValidationError="True">
                        <Binding.ValidationRules>
                            <Controls:MaxSubnetsValidationRule MaxSubnets="1000"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </mica:TextBox>

            <!-- IPAddress Input -->
            <TextBlock Grid.Row="1" Grid.Column="0" Text="IP Address:" Margin="5,0,5,0" VerticalAlignment="Center" Height="16" />
            <mica:TextBox Grid.Row="1" Grid.Column="1" Margin="5,5,2,5">
                <TextBox.Text>
                    <Binding Path="Address"
                         Mode="TwoWay"
                         UpdateSourceTrigger="PropertyChanged"
                         NotifyOnValidationError="True">
                        <Binding.ValidationRules>
                            <Controls:IPAddressValidationRule ValidatesOnTargetUpdated="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </mica:TextBox>

            <!-- Calculate Subnets Button -->
            <mica:Button Grid.Row="1" Grid.Column="2" Content="Calculate" Margin="2,5,5,5" Command="{Binding CalculateSubnetsCommand}" MinHeight="32">
                <mica:Button.Style>
                    <Style TargetType="mica:Button" BasedOn="{StaticResource {x:Type mica:Button}}">
                        <Setter Property="Padding" Value="10,8,10,9" />
                    </Style>
                </mica:Button.Style>
            </mica:Button>


            <!-- Subnets Grid -->
            <DataGrid Grid.Row="2" Grid.ColumnSpan="3" ItemsSource="{Binding Subnets}" Margin="0,5,0,5" AutoGenerateColumns="False" SelectionUnit="Cell" >
                <DataGrid.Resources>
                    <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource {x:Type DataGrid}}">
                        <Setter Property="HeadersVisibility" Value="Column"/>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                        <Setter Property="FontSize" Value="14" />
                        <Setter Property="Margin" Value="9,5,5,5" />
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Req. Host" IsReadOnly="False">
                        <DataGridTextColumn.Binding>
                            <Binding Path="HostAmount"
                                 Mode="TwoWay"
                                 UpdateSourceTrigger="PropertyChanged" 
                                 NotifyOnValidationError="True"
                                 ValidatesOnDataErrors="True">
                                <Binding.ValidationRules>
                                    <Controls:MaxHostAmountValidationRule MaxHostAmount="254"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </DataGridTextColumn.Binding>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Max Hosts" IsReadOnly="True" Binding="{Binding MaxSubnetHosts, Converter={StaticResource ZeroToNullConverter}}" />
                    <DataGridTextColumn Header="Subnet Mask" IsReadOnly="True" Binding="{Binding Mask}" />
                    <DataGridTextColumn Header="Network Address" IsReadOnly="True" Binding="{Binding NetworkAddress}" />
                    <DataGridTextColumn Header="Range" IsReadOnly="True" Binding="{Binding Range}" />
                    <DataGridTextColumn Header="Broadcast Address" IsReadOnly="True" Binding="{Binding BroadcastAddress}" />
                </DataGrid.Columns>
            </DataGrid>

        </Grid>
    </ui:Page>
    
</mica:MicaWindow>
